@using CarBill.vm;
@model BillFormData

@* asp-action="addNewProject" *@

<div class="card  col-8" style="margin-bottom: 70px;">
    <div class="card-body">
        <h5 class="card-title">فاتورة جديدة</h5>

        <!-- General Form Elements -->
        <form enctype="multipart/form-data">
            <div class="row mb-3">
                <label for="carCode" class="col-sm-2 col-form-label">كود السيارة</label>
                <div class="col-sm-10">
                    <input type="text" asp-for="carData.Id" class="form-control" id="carCode" required>
                    <div class="d-flex justify-content-center" style="text-align: center;">
                        <button type="button" id="showCarData" class="btn btn-outline-primary btn-sm m-1">اظهار بيانات السيارة</button>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <label for="description" class="col-sm-2 col-form-label">رقم اللوحة</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="carData.PlateNum" id="plateNum" disabled>
                </div>
            </div>
            <div class="row mb-3">
                <label for="location" class="col-sm-2 col-form-label">الماركة</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="carData.Brand" id="brand" disabled>
                </div>
            </div>
            <div class="row mb-3">
                <label for="date" class="col-sm-2 col-form-label">اللون</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="carData.Color" id="color" disabled>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-2 col-form-label">رمز السيارة</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="carData.Symbol" id="symbol" disabled>
                </div>
            </div>
            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">السائق</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="carData.driverName" id="driverName" disabled>
                </div>
            </div>

            

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">اخر قراءة عداد</label>
                <div class="col-sm-10">
                    <div class="d-flex justify-content-center" style="text-align: center;">
                        <input type="text" class="form-control" asp-for="carData.LastReading" id="lastReading" disabled>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">قراءة العداد الحالية</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="additionBillData.currentReading" id="currentReading">
                </div>
            </div>

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">ملاحظات</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="additionBillData.comment" id="comment">
                </div>
            </div>

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">فترة الصيانة</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="additionBillData.maintancePeriod" id="maintancePeriod">
                </div>
            </div>

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">فيديو</label>
                <div class="col-sm-10">
                    <input class="form-control" type="file" asp-for="additionBillData.videoInFormFile" id="fileInput">
                </div>
            </div>

            <div class="row mb-3">
                <label for="imageUpload" class="col-sm-2 col-form-label">نوع قسم الصيانة</label>
                <div class="col-sm-10">
                    <select class="form-control" id="categoryDropdown">
                        @* @foreach (var item in Model.cats)
                        {
                            <option value="@item.Id">@item.Name</option>
                        } *@
                        @for(int i = 0; i < Model.cats.Count; i++)
                        {
                            if(i == 0)
                            {
                                <option value="">اختر النوع</option>
                                <option value="@Model.cats[i].Id">@Model.cats[i].Name</option>
                            }else
                            {
                                <option value="@Model.cats[i].Id">@Model.cats[i].Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
            
            <table class="table table-hover" id="sparePartsTable" style="margin-bottom: 50px;">
                <thead>
                    <tr class="table-warning">
                        <th scope="col">الاسم</th>
                        <th scope="col">سعر القطعة</th>
                        <th style="text-align: center;" scope="col">سعر مصنعية التركيب</th>
                        <th style="text-align: center;" scope="col">صورة مصغرة</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Spare parts data will be inserted here dynamically -->
                </tbody>
            </table>

            @* the second table *@
            <table class="table table-hover" id="selectedSparePartsTable" style="margin-bottom: 50px;">
                <thead>
                    <tr class="table-success">
                        <th scope="col">اسم القطعة</th>
                        <th scope="col">عدد القطع</th>
                        <th scope="col">سعر القطعة</th>
                        <th scope="col">سعر مصنعية التركيب</th>
                        <th scope="col">السعر الإجمالي</th>
                        <th scope="col">تحميل صور للقطعة بعد التركيب</th>
                        <th scope="col">حذف</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Selected spare parts will be inserted here dynamically -->
                </tbody>
            </table>
            @* //////////////////////////// *@
            <div id="totalsContainer">
                <div class="row mb-3">
                    <label asp-for="additionBillData.totalAmount" class="col-sm-2 col-form-label">الاجمالي</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="totalAmount" disabled>
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="installationFees" class="col-sm-2 col-form-label">مصنعيه التركيب</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="installationFees" disabled>
                    </div>
                </div>
                <div class="row mb-3">
                    <label asp-for="additionBillData.discountRate" class="col-sm-2 col-form-label">نسبه خصم</label>
                    <div class="col-sm-10">
                        <input type="number" class="form-control" id="discountRate" placeholder="Enter discount rate">
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="netAmount" class="col-sm-2 col-form-label">الصافي</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="netAmount" disabled>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-10 offset-sm-2">
                    <button type="submit" class="btn btn-primary">انشاء الفاتورة</button>
                </div>
            </div>

            @* ////////////////////////////////////////////////////// *@
             @* <input class="form-control" type="file" asp-for="additionBillData.videoInFormFile" id="fileInput" multiple> *@
            @* <input class="form-control" type="file" asp-for="additionBillData.billRows[].PhotosInFormFiles" id="fileInput" multiple>
            '<input asp-for="additionBillData.billRows[' + i + '].PhotosInFormFiles" type="hidden value="DefaultUserName" />' + *@

        </form>

        <!-- End General Form Elements -->

    </div>
</div>

<script>
        document.getElementById('showCarData').addEventListener('click', function () {
            var carCode = document.getElementById('carCode').value;
            if (carCode) { // Check if the car code is not empty
                window.location.href = '/Home/ShowCarData/' + encodeURIComponent(carCode);
            } else {
                alert('Please enter the car code.'); // Alert the user to enter the car code
            }
        });


         document.getElementById('categoryDropdown').addEventListener('change', function () {
             var categoryId = this.value;

        // Make an AJAX request to fetch spare parts related to the selected category
        fetch('/Home/GetSparePartsByCategory?categoryId=' + categoryId)
            .then(response => response.json())
            .then(data => {
                // Update the spare parts table with the fetched data
                var tbody = document.querySelector('#sparePartsTable tbody');
                tbody.innerHTML = '';

                // Converted forEach to a standard for loop
                for (var i = 0; i < data.length; i++) {
                    var item = data[i];
                    var row = '<tr>' +
                        '<td data-id =' + item.id + ' style="font-size: 16px; font-weight: bold;">' + item.name + '</td>' +
                        '<td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 100px;">' + item.price + '</td>' +
                        '<td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px; text-align: center;">' + item.priceOfInstaling + '</td>' +
                        '<td class="d-flex justify-content-center align-items-center" style="text-align: center;">' +
                        '<img src="/images/' + item.imageUrl + '" alt="..." style="max-height: 50px; max-width: 50px;">' +
                        '</td>' +
                        '</tr>';
                    tbody.innerHTML += row;
                }
            })
            .catch(error => console.error('Error fetching spare parts:', error));

         });

         

        document.addEventListener('DOMContentLoaded', function () {
            // Attach click event to the rows in the spare parts table to add them to the selected spare parts table
            document.querySelector('#sparePartsTable tbody').addEventListener('click', function (event) {
                // Ensure we're clicking on a row
                var target = event.target.closest('tr');
                if (!target) return; // Exit if not clicking on a row

                var name = target.cells[0].innerText;
                var IdForSparePart = target.cells[0].dataset.id;
                var price = parseFloat(target.cells[1].innerText);
                var priceOfInstaling = parseFloat(target.cells[2].innerText);


                // Function to add the clicked spare part to the selected spare parts table
                addToSelectedSpareParts(name, price, priceOfInstaling, IdForSparePart);
            });

            // Attach change event to dynamically listen for changes in quantity inputs in the selected spare parts table
            document.addEventListener('change', function (event) {
                if (event.target.matches('.qty-input')) {
                    updateRowTotalPrice(event.target.closest('tr')); // Update total price for the row
                    calculateTotals(); // Recalculate totals for all items
                }
            });

            // Recalculate totals when the discount rate changes
            document.getElementById('discountRate').addEventListener('change', calculateTotals);
        });

    function addToSelectedSpareParts(name, price, priceOfInstaling, IdForSparePart) {

        var tbody = document.querySelector('#selectedSparePartsTable tbody');
        var existingRow = tbody.querySelector(`tr[data-id="${IdForSparePart}"]`); // Use the data-id attribute to find the row

        if (existingRow) {
            var qtyInput = existingRow.querySelector('.qty-input');
            qtyInput.value = parseInt(qtyInput.value) + 1;
            updateRowTotalPrice(existingRow);
        } else {
            var newRow = document.createElement('tr');
            newRow.setAttribute('data-id', IdForSparePart); // Set the data-id attribute for the new row
            newRow.innerHTML = `
            <td>${name}</td>
            <td><input type="number" class="form-control qty-input" value="1" min="1" style="width: 60px;"></td>
            <td>${price.toFixed(2)}</td>
            <td>${priceOfInstaling.toFixed(2)}</td>
            <td class="total-price"></td>
            <td><input type="file" class="form-control spare-part-image" accept="image/*" multiple></td>
            <td><button class="btn btn-danger remove-btn">ازالة</button></td>
        `;
            tbody.appendChild(newRow);
            updateRowTotalPrice(newRow);
        }

        calculateTotals();
    }


    function updateRowTotalPrice(row) {
        var qty = parseInt(row.querySelector('.qty-input').value);
        var price = parseFloat(row.cells[2].innerText);
        var priceOfInstaling = parseFloat(row.cells[3].innerText);
        var totalPrice = qty * (price + priceOfInstaling);
        row.querySelector('.total-price').innerText = totalPrice.toFixed(2);
    }

    function calculateTotals() {
        let totalAmount = 0, installationFees = 0;
        document.querySelectorAll('#selectedSparePartsTable tbody tr').forEach(row => {
            const qty = parseInt(row.querySelector('.qty-input').value);
            const price = parseFloat(row.cells[2].innerText);
            const priceOfInstaling = parseFloat(row.cells[3].innerText);
            totalAmount += qty * price;
            installationFees += qty * priceOfInstaling;
        });

        const total = totalAmount + installationFees;
        document.getElementById('totalAmount').value = total.toFixed(2);
        document.getElementById('installationFees').value = installationFees.toFixed(2);

        // Calculate discount and net amount based on the total and discount rate
        const discountRate = parseFloat(document.getElementById('discountRate').value) || 0;
        const discountAmount = total * (discountRate / 100);
        const netAmount = total - discountAmount;
        document.getElementById('netAmount').value = netAmount.toFixed(2);
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Existing setup code...

        // Add event listener for dynamically added remove buttons
        document.querySelector('#selectedSparePartsTable tbody').addEventListener('click', function (event) {
            if (event.target.matches('.remove-btn')) {
                removeProductRow(event.target.closest('tr'));
            }
        });
    });

    function removeProductRow(row) {
        row.remove(); // Remove the product row
        calculateTotals(); // Recalculate totals after removal
    }


    // this js part is to add attributes names to could arrive to data from the second table while requesting the http post endpoint =>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form'); // Adjust if you have a specific form identifier

        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent the normal form submission

            const formData = new FormData();

            // Append simple text data
            formData.append('carData.Id', document.getElementById('carCode').value);
            formData.append('carData.PlateNum', document.getElementById('plateNum').value);
            formData.append('carData.Brand', document.getElementById('brand').value);
            formData.append('carData.Color', document.getElementById('color').value);
            formData.append('carData.Symbol', document.getElementById('symbol').value);
            formData.append('carData.driverName', document.getElementById('driverName').value);
            formData.append('carData.LastReading', document.getElementById('lastReading').value);

            // Append additionBillData
            formData.append('additionBillData.comment', document.getElementById('comment').value);
            formData.append('additionBillData.currentReading', document.getElementById('currentReading').value);
            formData.append('additionBillData.maintancePeriod', document.getElementById('maintancePeriod').value);
            formData.append('additionBillData.totalAmount', document.getElementById('totalAmount').value);
            formData.append('additionBillData.discountRate', document.getElementById('discountRate').value);

            // Append video file if available
            const videoFile = document.getElementById('fileInput').files[0];
            if (videoFile) {
                formData.append('additionBillData.videoInFormFile', videoFile);
            }

            // Dynamically add bill rows and their photos
            document.querySelectorAll('#selectedSparePartsTable tbody tr').forEach((row, index) => {
                formData.append(`additionBillData.billRows[${index}].amount`, row.querySelector('.qty-input').value);
                formData.append(`additionBillData.billRows[${index}].total_priceForBillRow`, row.querySelector('.total-price').innerText);
                // Assuming data-sparePartId stores the spare part ID
                formData.append(`additionBillData.billRows[${index}].sparePartId`, row.dataset.id);

                const filesInput = row.querySelector('.spare-part-image');
                console.log(filesInput.files); // Debugging line to check files
                for (let i = 0; i < filesInput.files.length; i++) {
                    formData.append(`additionBillData.billRows[${index}].PhotosInFormFiles`, filesInput.files[i]);
                }
            });

            fetch('/Home/SaveNewBill', {
                method: 'POST',
                body: formData
                // Note: Omit Content-Type to let the browser set it along with the boundary.
            })
                .then(response => response.json())
                .then(data => {
                    // Check if the response is a string (error message)
                    if (typeof data === 'string') {
                        alert(data); // Show the error message to the user
                    }
                    // Otherwise, check if the response is an object containing a redirectUrl
                    else if (data && data.redirectUrl) {
                        window.location.href = data.redirectUrl; // Redirect to the provided URL
                    } else if (data && data.message) {
                        // If there's a message in the object, you can show it as an alert.
                        // This step is optional based on whether you expect messages other than errors.
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while processing your request.');
                    // Handle any errors that occurred during the fetch.
                });

        });
    });

</script>


